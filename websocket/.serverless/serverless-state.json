{
  "service": {
    "service": "poker",
    "serviceObject": {
      "name": "poker"
    },
    "provider": {
      "name": "aws",
      "iamManagedPolicies": [
        "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
      ],
      "runtime": "python3.8",
      "versionFunctions": false,
      "region": "eu-west-1",
      "timeout": 29,
      "stage": "dev",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ConnectHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/poker-dev-connectHandler"
            }
          },
          "DisconnectHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/poker-dev-disconnectHandler"
            }
          },
          "GameActionHandlerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/poker-dev-gameActionHandler"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "poker",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/poker-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/poker-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:ManageConnections"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "poker",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
              ]
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-GNrn6TstKQv7Qc8m9D"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "ConnectHandlerLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DisconnectHandlerLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GameActionHandlerLogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "PythonPackageLayerLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/poker/dev/1613932917198-2021-02-21T18:41:57.198Z/pythonPackageLayer.zip"
              },
              "LayerName": "Python-Package-layer",
              "Description": "Python Package layer",
              "CompatibleRuntimes": [
                "python3.8"
              ]
            }
          },
          "ConnectHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/poker/dev/1613935431054-2021-02-21T19:23:51.054Z/connectHandler.zip"
              },
              "Handler": "s_connectHandler.handler",
              "Runtime": "python3.8",
              "FunctionName": "poker-dev-connectHandler",
              "MemorySize": 1024,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "POKER_CONNECTIONS_TABLE_NAME": {
                    "Fn::Sub": "pokerConnections-${AWS::AccountId}-dev"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "PythonPackageLayerLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "ConnectHandlerLogGroup"
            ]
          },
          "DisconnectHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/poker/dev/1613935431054-2021-02-21T19:23:51.054Z/disconnectHandler.zip"
              },
              "Handler": "s_disconnectHandler.handler",
              "Runtime": "python3.8",
              "FunctionName": "poker-dev-disconnectHandler",
              "MemorySize": 1024,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "POKER_CONNECTIONS_TABLE_NAME": {
                    "Fn::Sub": "pokerConnections-${AWS::AccountId}-dev"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "PythonPackageLayerLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "DisconnectHandlerLogGroup"
            ]
          },
          "GameActionHandlerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/poker/dev/1613935431054-2021-02-21T19:23:51.054Z/gameActionHandler.zip"
              },
              "Handler": "s_gameActionHandler.handler",
              "Runtime": "python3.8",
              "FunctionName": "poker-dev-gameActionHandler",
              "MemorySize": 1024,
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "POKER_CONNECTIONS_TABLE_NAME": {
                    "Fn::Sub": "pokerConnections-${AWS::AccountId}-dev"
                  },
                  "POKER_GAMES_CONNECTIONS_TABLE_NAME": {
                    "Fn::Sub": "pokerGames-${AWS::AccountId}-dev"
                  },
                  "POKER_PAST_GAMES_CONNECTIONS_TABLE_NAME": {
                    "Fn::Sub": "pokerPastGames-${AWS::AccountId}-dev"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                {
                  "Ref": "PythonPackageLayerLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "GameActionHandlerLogGroup"
            ]
          },
          "WebsocketsApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-poker-websockets",
              "RouteSelectionExpression": "$request.body.action",
              "Description": "Serverless Websockets",
              "ProtocolType": "WEBSOCKET"
            }
          },
          "ConnectHandlerWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ConnectHandlerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "DisconnectHandlerWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DisconnectHandlerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "GameActionHandlerWebsocketsIntegration": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GameActionHandlerLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            }
          },
          "ConnectHandlerLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "ConnectHandlerLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ConnectHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "DisconnectHandlerLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "DisconnectHandlerLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DisconnectHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "GameActionHandlerLambdaPermissionWebsockets": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": [
              "WebsocketsApi",
              "GameActionHandlerLambdaFunction"
            ],
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GameActionHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "SconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$connect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "ConnectHandlerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "SdisconnectWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "$disconnect",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "DisconnectHandlerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "onGameActionWebsocketsRoute": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "RouteKey": "onGameAction",
              "AuthorizationType": "NONE",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "GameActionHandlerWebsocketsIntegration"
                    }
                  ]
                ]
              }
            }
          },
          "WebsocketsDeploymentStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "StageName": "dev",
              "Description": "Serverless Websockets",
              "DeploymentId": {
                "Ref": "WebsocketsDeploymentiB20MXFOr8hnMecy9xZIb7GQow3Lx4j3tQuSN1faXYw"
              }
            }
          },
          "WebsocketsDeploymentiB20MXFOr8hnMecy9xZIb7GQow3Lx4j3tQuSN1faXYw": {
            "Type": "AWS::ApiGatewayV2::Deployment",
            "DependsOn": [
              "SconnectWebsocketsRoute",
              "SdisconnectWebsocketsRoute",
              "onGameActionWebsocketsRoute"
            ],
            "Properties": {
              "ApiId": {
                "Ref": "WebsocketsApi"
              },
              "Description": "Serverless Websockets"
            }
          },
          "pokerConnectionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "TableName": {
                "Fn::Sub": "pokerConnections-${AWS::AccountId}-dev"
              },
              "AttributeDefinitions": [
                {
                  "AttributeName": "connectionId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "connectionId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "SSESpecification": {
                "SSEEnabled": true
              }
            }
          },
          "pokerGamesTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "TableName": {
                "Fn::Sub": "pokerGames-${AWS::AccountId}-dev"
              },
              "AttributeDefinitions": [
                {
                  "AttributeName": "gameId",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "gameId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "SSESpecification": {
                "SSEEnabled": true
              }
            }
          },
          "pokerPastGamesTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "TableName": {
                "Fn::Sub": "pokerPastGames-${AWS::AccountId}-dev"
              },
              "AttributeDefinitions": [
                {
                  "AttributeName": "gameId",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "gameId",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "SSESpecification": {
                "SSEEnabled": true
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterConnectHandlerLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:GNrn6TstKQv7Qc8m9D#p4c8kgn2t2N3p0J9SR#poker#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "ConnectHandlerLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterDisconnectHandlerLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:GNrn6TstKQv7Qc8m9D#p4c8kgn2t2N3p0J9SR#poker#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DisconnectHandlerLogGroup"
              }
            }
          },
          "CloudWatchLogsSubscriptionFilterGameActionHandlerLogGroup": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:eu-west-1:802587217904:destination:GNrn6TstKQv7Qc8m9D#p4c8kgn2t2N3p0J9SR#poker#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GameActionHandlerLogGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            }
          },
          "PythonPackageLayerLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "PythonPackageLayerLambdaLayer"
            }
          },
          "PythonPackageLayerLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "b2b4e4b6508baa225aab344d65fee5b91370602c"
          },
          "PythonPackageLayerLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/poker/dev/1613932917198-2021-02-21T18:41:57.198Z/pythonPackageLayer.zip"
          },
          "ServiceEndpointWebsocket": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "wss://",
                  {
                    "Ref": "WebsocketsApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "currentStage": "dev",
      "lambdaRunTime": "python3.8",
      "pokerConnections": "pokerConnections-#{AWS::AccountId}-dev",
      "pokerGames": "pokerGames-#{AWS::AccountId}-dev",
      "pokerPastGames": "pokerPastGames-#{AWS::AccountId}-dev"
    },
    "plugins": [
      "serverless-pseudo-parameters"
    ],
    "pluginsData": {},
    "functions": {
      "connectHandler": {
        "handler": "s_connectHandler.handler",
        "events": [
          {
            "websocket": "$connect"
          }
        ],
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ConnectHandlerLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "POKER_CONNECTIONS_TABLE_NAME": "pokerConnections-#{AWS::AccountId}-dev"
        },
        "name": "poker-dev-connectHandler",
        "package": {
          "include": [
            "s_connectHandler.py",
            "serverless_sdk/**"
          ],
          "artifact": "/home/ed/coding-feb-20/coding-dec-2020/heads-up-poker/websocket/.serverless/connectHandler.zip"
        },
        "memory": 1024,
        "timeout": 29,
        "runtime": "python3.8",
        "vpc": {}
      },
      "disconnectHandler": {
        "handler": "s_disconnectHandler.handler",
        "events": [
          {
            "websocket": "$disconnect"
          }
        ],
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DisconnectHandlerLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "POKER_CONNECTIONS_TABLE_NAME": "pokerConnections-#{AWS::AccountId}-dev"
        },
        "name": "poker-dev-disconnectHandler",
        "package": {
          "include": [
            "s_disconnectHandler.py",
            "serverless_sdk/**"
          ],
          "artifact": "/home/ed/coding-feb-20/coding-dec-2020/heads-up-poker/websocket/.serverless/disconnectHandler.zip"
        },
        "memory": 1024,
        "timeout": 29,
        "runtime": "python3.8",
        "vpc": {}
      },
      "gameActionHandler": {
        "handler": "s_gameActionHandler.handler",
        "events": [
          {
            "websocket": {
              "route": "onGameAction"
            }
          }
        ],
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GameActionHandlerLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "environment": {
          "POKER_CONNECTIONS_TABLE_NAME": "pokerConnections-#{AWS::AccountId}-dev",
          "POKER_GAMES_CONNECTIONS_TABLE_NAME": "pokerGames-#{AWS::AccountId}-dev",
          "POKER_PAST_GAMES_CONNECTIONS_TABLE_NAME": "pokerPastGames-#{AWS::AccountId}-dev"
        },
        "name": "poker-dev-gameActionHandler",
        "package": {
          "include": [
            "s_gameActionHandler.py",
            "serverless_sdk/**"
          ],
          "artifact": "/home/ed/coding-feb-20/coding-dec-2020/heads-up-poker/websocket/.serverless/gameActionHandler.zip"
        },
        "memory": 1024,
        "timeout": 29,
        "runtime": "python3.8",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "pokerConnectionsTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "TableName": "pokerConnections-#{AWS::AccountId}-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "connectionId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "connectionId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "SSESpecification": {
              "SSEEnabled": true
            }
          }
        },
        "pokerGamesTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "TableName": "pokerGames-#{AWS::AccountId}-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "gameId",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "gameId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "SSESpecification": {
              "SSEEnabled": true
            }
          }
        },
        "pokerPastGamesTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "TableName": "pokerPastGames-#{AWS::AccountId}-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "gameId",
                "AttributeType": "N"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "gameId",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "SSESpecification": {
              "SSEEnabled": true
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "app": "poker",
    "org": "edwardhorsey",
    "layers": {
      "pythonPackageLayer": {
        "path": "lib",
        "name": "Python-Package-layer",
        "description": "Python Package layer",
        "compatibleRuntimes": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PythonPackageLayerLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
        },
        "package": {
          "artifact": "/home/ed/coding-feb-20/coding-dec-2020/heads-up-poker/websocket/.serverless/pythonPackageLayer.zip"
        },
        "artifactAlreadyUploaded": true
      }
    },
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "org": "edwardhorsey",
      "app": "poker",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "exclude": [
          "lib/**",
          "node_modules/**"
        ],
        "artifactDirectoryName": "serverless/poker/dev/1613935431054-2021-02-21T19:23:51.054Z"
      },
      "layers": {
        "$ref": "$[\"service\"][\"layers\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "orgUid": "GNrn6TstKQv7Qc8m9D",
    "appUid": "p4c8kgn2t2N3p0J9SR"
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/poker/dev/1613935431054-2021-02-21T19:23:51.054Z",
    "artifact": ""
  }
}