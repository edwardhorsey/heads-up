# service: heads-up-poker
# org: edwardhorsey
# app: heads-up-poker

# custom:
#   currentStage: ${opt:stage, self:provider.stage}
#   lambdaRunTime: python3.8
#   socketConnectionsTableName: socketConnections-#{AWS::AccountId}-${self:custom.currentStage}

# provider:
#   name: aws
#   iamManagedPolicies:
#     - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
#   runtime: ${self:custom.lambdaRunTime}
#   versionFunctions: false
#   region: eu-west-1
#   timeout: 29

# plugins:
#   - serverless-pseudo-parameters
# package:
#   individually: true
#   exclude:
#     - "lib/**"
#     - "node_modules/**"

# layers:
#   pythonPackageLayer:
#     path: lib
#     name: Python-Package-layer
#     description: Python Package layer
#     compatibleRuntimes:
#       - ${self:custom.lambdaRunTime}

# functions:
#   connectHandler:
#     handler: connect_handler.handle
#     events:
#       - websocket: $connect
#     layers:
#       - { Ref: PythonPackageLayerLambdaLayer }
#     environment:
#       SOCKET_CONNECTIONS_TABLE_NAME: ${self:custom.socketConnectionsTableName}

#   disconnectHandler:
#     handler: disconnect_handler.handle
#     events:
#       - websocket: $disconnect
#     layers:
#       - { Ref: PythonPackageLayerLambdaLayer }
#     environment:
#       SOCKET_CONNECTIONS_TABLE_NAME: ${self:custom.socketConnectionsTableName}

#   onMessageHandler:
#     handler: on_message_handler.handle
#     events:
#       - websocket:
#           route: onMessage
#     layers:
#       - { Ref: PythonPackageLayerLambdaLayer }
#     environment:
#       SOCKET_CONNECTIONS_TABLE_NAME: ${self:custom.socketConnectionsTableName}

#   onNameHandler:
#     handler: name_handler.handle
#     events:
#       - websocket:
#           route: onName
#     layers:
#       - { Ref: PythonPackageLayerLambdaLayer }
#     environment:
#       SOCKET_CONNECTIONS_TABLE_NAME: ${self:custom.socketConnectionsTableName}

# resources:
#   Resources:
#     socketConnectionsTable:
#       Type: AWS::DynamoDB::Table
#       DeletionPolicy: Retain
#       Properties:
#         TableName: ${self:custom.socketConnectionsTableName}
#         AttributeDefinitions:
#           - AttributeName: connectionId
#             AttributeType: S
#         KeySchema:
#           - AttributeName: connectionId
#             KeyType: HASH
#         BillingMode: PAY_PER_REQUEST
#         SSESpecification:
#           SSEEnabled: true